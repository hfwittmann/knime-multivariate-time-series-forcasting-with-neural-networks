<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
<entry key="node_file" type="xstring" value="settings.xml"/>
<config key="flow_stack"/>
<config key="internal_node_subsettings">
<entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
</config>
<config key="model">
<entry key="sourceCode" type="xstring" value="import pandas as pd%%00010import json_tricks%%00010%%00010C = json_tricks.loads(flow_variables['C'])%%00010D = json_tricks.loads(flow_variables['D'])%%00010model = json_tricks.loads(flow_variables['model'])%%00010%%00010plotname = model['plotname']%%00010modelname = model['modelname']%%00010predictionModel = model['predictionModel']%%00010%%00010SERIES_train = D.train(D.SERIES(), Configuration=C)%%00010SERIES_test = D.test(D.SERIES(), Configuration=C)%%00010%%00010VARIABLES_train = D.train(D.VARIABLES(), Configuration=C)%%00010VARIABLES_test = D.test(D.VARIABLES(), Configuration=C)%%00010%%00010Prediction = json_tricks.loads(flow_variables['Prediction'])%%00010Skill = json_tricks.loads(flow_variables['Skill'])%%00010%%00010from matplotlib import pyplot as plt%%00010# plot stuff%%00010f, axarr = plt.subplots(1, 2, sharey=True)%%00010%%00010f.suptitle(predictionModel + ', Series ' + C.dictionary['DataSeries'])%%00010%%00010axarr[0].plot(SERIES_test)%%00010axarr[0].plot(Prediction)%%00010axarr[0].set_title('Prediction, Series vs Time')%%00010axarr[0].set_xlabel('Time')%%00010axarr[0].set_ylabel('Prediction, Series')%%00010%%00010axarr[1].plot(SERIES_test, Prediction, '.')%%00010axarr[1].set_title('Prediction vs Series')%%00010axarr[1].set_xlabel('Series')%%00010axarr[1].set_ylabel('Prediction')%%00010%%00010plt.savefig(plotname + '_1.png', dpi=300)%%00010# plt.show()%%00010# end: # plot stuff%%00010%%00010%%00010# second set of plots%%00010f, axarr = plt.subplots(1, D.numberOfSeries(), sharey=True)%%00010%%00010f.suptitle( predictionModel + ', Prediction vs Series ' + C.dictionary['DataSeries'])%%00010%%00010seriesTitles = list(D.dictionaryTimeseries.keys())%%00010%%00010x = 1%%00010%%00010%%00010for plotNumber in range(D.numberOfSeries()):%%00010%%00010    seriesNumber = plotNumber%%00010    %%00010    axarr[plotNumber].plot(SERIES_test[:,seriesNumber], Prediction[:,seriesNumber], '.')%%00010#     axarr[plotNumber].plot(SERIES_test[:-x,seriesNumber], Prediction[x:,seriesNumber], '.')%%00010%%00010    if Skill[seriesNumber] &lt; 50:%%00010        axarr[plotNumber].set_title('S. ' + str(Skill[seriesNumber]) + '%', color='red')%%00010    %%00010    if Skill[seriesNumber] &gt; 50:%%00010        axarr[plotNumber].set_title('S. ' + str(Skill[seriesNumber]) + '%', color='green', fontweight='bold')%%00010    %%00010    %%00010    axarr[plotNumber].set_xlabel(seriesTitles[seriesNumber])%%00010    axarr[plotNumber].set_ylabel('Prediction')%%00010    axarr[plotNumber].set_xticklabels([])%%00010%%00010plt.savefig(plotname + '_2.png', dpi=300)%%00010%%00010plt.show()%%00010# end: # second set of plots%%00010%%00010%%00010from pandas import DataFrame%%00010# Create empty table%%00010output_table = DataFrame(Skill, index=seriesTitles, columns=[predictionModel])"/>
<entry key="rowLimit" type="xint" value="1000"/>
<entry key="pythonVersionOption" type="xstring" value="PYTHON3"/>
<entry key="convertMissingToPython" type="xboolean" value="false"/>
<entry key="convertMissingFromPython" type="xboolean" value="false"/>
<entry key="sentinelOption" type="xstring" value="MIN_VAL"/>
<entry key="sentinelValue" type="xint" value="0"/>
<entry key="chunkSize" type="xint" value="500000"/>
</config>
<config key="nodeAnnotation">
<entry key="text" type="xstring" value="Do Plots%%00010Output Skill Score"/>
<entry key="bgcolor" type="xint" value="16777215"/>
<entry key="x-coordinate" type="xint" value="523"/>
<entry key="y-coordinate" type="xint" value="259"/>
<entry key="width" type="xint" value="115"/>
<entry key="height" type="xint" value="28"/>
<entry key="alignment" type="xstring" value="CENTER"/>
<entry key="borderSize" type="xint" value="0"/>
<entry key="borderColor" type="xint" value="16777215"/>
<entry key="defFontSize" type="xint" value="9"/>
<entry key="annotation-version" type="xint" value="20151123"/>
<config key="styles"/>
</config>
<entry key="customDescription" type="xstring" isnull="true" value=""/>
<entry key="state" type="xstring" value="EXECUTED"/>
<entry key="factory" type="xstring" value="org.knime.python2.nodes.source.Python2SourceNodeFactory"/>
<entry key="node-name" type="xstring" value="Python Source"/>
<entry key="node-bundle-name" type="xstring" value="KNIME Python nodes"/>
<entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.python2.nodes"/>
<entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
<entry key="node-bundle-version" type="xstring" value="3.5.2.v201802051356"/>
<entry key="node-feature-name" type="xstring" value="KNIME Python Integration"/>
<entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.python2.feature.group"/>
<entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
<entry key="node-feature-version" type="xstring" value="3.5.2.v201802051356"/>
<config key="factory_settings"/>
<entry key="name" type="xstring" value="Python Source"/>
<entry key="hasContent" type="xboolean" value="true"/>
<entry key="isInactive" type="xboolean" value="false"/>
<config key="ports">
<config key="port_1">
<entry key="index" type="xint" value="1"/>
<entry key="port_spec_class" type="xstring" value="org.knime.core.data.DataTableSpec"/>
<entry key="port_object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
<entry key="port_object_summary" type="xstring" value="Rows: 7, Cols: 1"/>
<entry key="port_dir_location" type="xstring" value="port_1"/>
</config>
</config>
<config key="filestores">
<entry key="file_store_location" type="xstring" isnull="true" value=""/>
<entry key="file_store_id" type="xstring" value="b37a1b72-b34e-45f9-bee3-828d6140476e"/>
</config>
</config>
